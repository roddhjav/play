---

- name: Enable noble-proposed
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/ubuntu.sources
    regexp: >-
      ^Suites: {{ ansible_distribution_release }}
      {{ ansible_distribution_release }}-updates
      {{ ansible_distribution_release }}-backports
    line: >-
      Suites: {{ ansible_distribution_release }}
      {{ ansible_distribution_release }}-updates
      {{ ansible_distribution_release }}-backports
      {{ ansible_distribution_release }}-proposed
  when: core__with_patch

- name: 'Install kernel with fix for https://bugs.launchpad.net/ubuntu/+source/apparmor/+bug/2095370'
  ansible.builtin.shell:
    cmd: |
      apt update -y
      apt install -y linux-virtual/noble-proposed linux-headers-virtual/noble-proposed
      apt autoremove -y
      mkdir -p /etc/ansible/facts/
      touch /etc/ansible/facts/kernel_fixed
      touch /etc/ansible/facts/reboot_needed
    creates: /etc/ansible/facts/kernel_fixed
  when: core__with_patch

- name: Check if a reboot is needed
  ansible.builtin.stat:
    path: /etc/ansible/facts/reboot_needed
  register: reboot_needed
  when: core__with_patch

- name: Reboot the machine after kernel update
  ansible.builtin.reboot:
    msg: "Rebooting machine after kernel update"
  when: core__with_patch and reboot_needed.stat.exists

- name: Clean up after reboot
  ansible.builtin.file:
    path: /etc/ansible/facts/reboot_needed
    state: absent
  when: core__with_patch

- name: Install required packages
  ansible.builtin.apt:
    name: '{{ (core__base_packages + core__packages) | flatten }}'
    state: 'present'
    install_recommends: false
    update_cache: true

- name: Ensure unwelcome packages are not installed
  ansible.builtin.apt:
    name: '{{ (core__base_remove_packages + core__remove_packages) | flatten }}'
    state: 'absent'
    purge: true

- name: Install dotfiles for the default users
  ansible.builtin.include_tasks: dotfiles-users.yml
  vars:
    core__getroot_method: 'sudo '

- name: Install dotfiles for root user
  ansible.builtin.include_tasks: dotfiles-root.yml
  when: core__with_root
  vars:
    core__getroot_method: ''

- name: Install the resources files
  ansible.builtin.include_tasks: resources.yml
  when: core__with_resources

- name: Enabled service managed by the role
  ansible.builtin.service:
    name: '{{ item }}'
    state: started
    enabled: true
  with_items: '{{ core__services }}'

---

- name: Install requested packages
  ansible.builtin.package:
    name: '{{ q("flattened", (apparmor_profiles__base_packages
                              + apparmor_profiles__packages)) }}'
    state: 'present'
    install_recommends: false

- name: Enable journald audit
  ansible.builtin.service:
    name: systemd-journald-audit.socket
    enabled: true

- name: Ensure old apparmor cache directory is clean
  ansible.builtin.file:
    path: /var/cache/apparmor
    state: absent

- name: Configure apparmor for large set of profiles
  ansible.builtin.copy:
    src: parser.conf
    dest: /etc/apparmor/parser.conf
    mode: "0644"

- name: Locally build the apparmor.d repository
  ansible.builtin.shell:
    chdir: '{{ apparmor_profiles__repo_path }}'
    cmd: |
      #!/usr/bin/env bash
      set -euo pipefail

      source dists/docker.sh

      # Configure apparmor.d to our needs
      configure() {
        # Enable Full System Policy with forced enforce mode
        echo -e "\noverride_dh_auto_build:\n\t" >> "$VOLUME/$PKGNAME/debian/rules"
        echo -e "{{ apparmor_profiles__auto_build }}" >> "$VOLUME/$PKGNAME/debian/rules"

        # Strict FSP, the default profile is not enabled.
        rm "$VOLUME/$PKGNAME/apparmor.d/groups/_full/default"*
        rm "$VOLUME/$PKGNAME/apparmor.d/groups/_full/bwrap"*

        # Disable hotfixes as they are for desktop only
        sed -e '/hotfix/d' -i "$VOLUME/$PKGNAME/cmd/prebuild/main.go"

        # Only install profile required on servers
        cp '{{ role_path }}/files/main.ignore' "$VOLUME/$PKGNAME/dists/ignore/main.ignore"
        cp '{{ role_path }}/files/main.flags' "$VOLUME/$PKGNAME/dists/flags/main.flags"
      }

      sync
      configure
      build_in_docker_dpkg ubuntu
  become: false
  delegate_to: localhost

- name: Locate the apparmor.d packages
  ansible.builtin.find:
    paths: '{{ apparmor_profiles__repo_path }}/.pkg'
    patterns: 'apparmor.d_*.deb'
    age: '-2m'
  register: _apparmor_profiles__pkg_files
  become: false
  delegate_to: localhost

- name: Ensure the apparmor.d packages are present
  ansible.builtin.fail:
    msg: "No apparmor.d packages found"
  when: _apparmor_profiles__pkg_files.matched == 0

- name: Ensure the upload directory for packages exists
  ansible.builtin.file:
    path: "/tmp/pkg"
    state: directory
    mode: "0755"
    owner: root
    group: root

- name: Upload the apparmor.d packages
  ansible.builtin.copy:
    src: '{{ item["path"] }}'
    dest: /tmp/pkg/
    mode: "0644"
    force: '{{ apparmor_profiles__dev }}'
  with_items: '{{ _apparmor_profiles__pkg_files.files }}'

- name: Install the apparmor.d packages
  ansible.builtin.command:
    cmd: 'dpkg --install /tmp/pkg/{{ item["path"] | basename }}'
  with_items: '{{ _apparmor_profiles__pkg_files.files }}'

- name: Ensure the apparmor service is restarted
  ansible.builtin.service:
    name: apparmor
    state: restarted
    enabled: true

